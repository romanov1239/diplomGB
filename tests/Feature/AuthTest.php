<?php

namespace Tests\Feature;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;
use App\Models\User;

class AuthTest extends TestCase
{
    protected $user;
    protected $password;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->password='123456';
        $this->user=User::factory()->create(['password'=>bcrypt($this->password)]);
    }

    protected function attemptToLogin()
    {
        return $this->post('login',[
            'email'=>$this->user->email,
            'password'=>$this->password,
        ]);
    }

    public function testAuth()
    {

        $response = $this->post('login',['email'=>$this->user->email,'password'=>$this->password]);
        $response->assertStatus(200);

        $response=$this->get('roles');
        $response->assertStatus(200);

        $response=$this->get('logout');
        $response->assertStatus(200);

        $response=$this->get('roles');
        $response->assertStatus(301);
    }

    public function testAuthFailed()
    {
        $password='123456';
        $user=User::factory()->create(['password'=>bcrypt($password)]);
        $response = $this->post('login',['email'=>$user->email,'password'=>$password.'7']);
        $response->assertStatus(301);


        $response=$this->get('roles');
        $response->assertStatus(301);
    }
    public function testRolesAuth()
    {
        $password=123456;
        $user=User::factory()->create(['password'=>bcrypt($password)]);
        $response = $this->post('login',['email'=>$user->email,'password'=>$password.'7']);
        $response->assertStatus(301);


        $response=$this->get('roles');
        $response->assertStatus(301);
    }
}
